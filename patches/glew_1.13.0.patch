# WARNING
# This file is downloaded and modified by CMake.
# Manual edits will be overwritten.

diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..b6cf6bc
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,2 @@
+cmake_minimum_required(VERSION 3.0)
+add_subdirectory(build/cmake)
diff --git a/build/cmake/CMakeLists.txt b/build/cmake/CMakeLists.txt
index 1563f9f..4e8927d 100644
--- a/build/cmake/CMakeLists.txt
+++ b/build/cmake/CMakeLists.txt
@@ -5,12 +5,15 @@ endif ()
 project (glew)
 
 cmake_minimum_required (VERSION 2.4)
+include (flags OPTIONAL)
 
 if (COMMAND cmake_policy)
   cmake_policy (SET CMP0003 NEW)
 endif()
 
-set(CMAKE_DEBUG_POSTFIX d)
+if (NOT DEFINED CMAKE_DEBUG_POSTFIX)
+  set(CMAKE_DEBUG_POSTFIX d)
+endif ()
 
 option (BUILD_UTILS "utilities" ON)
 
@@ -25,6 +28,14 @@ file (STRINGS ${GLEW_DIR}/config/version  _VERSION_PATCH_STRING REGEX "GLEW_MICR
 string (REGEX REPLACE "GLEW_MICRO[ ]*=[ ]*([0-9]+)" "\\1" CPACK_PACKAGE_VERSION_PATCH ${_VERSION_PATCH_STRING})
 set (GLEW_VERSION ${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH})
 
+if (DEFINED GLEW_VER)
+  if (NOT ${GLEW_VER} STREQUAL ${GLEW_VERSION})
+    message (AUTHOR_WARNING "version passed in (${GLEW_VER}) doesn't match version from config/version (${GLEW_VERSION})")
+  endif ()
+  set (ver _${GLEW_VERSION})
+  set (verDir /${PROJECT_NAME}${ver})
+endif ()
+
 set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
 set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
 set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
@@ -46,14 +57,14 @@ include_directories (${GLEW_DIR}/include)
 add_library (glew SHARED ${GLEW_DIR}/src/glew.c)
 set_target_properties (glew PROPERTIES COMPILE_DEFINITIONS "GLEW_BUILD" OUTPUT_NAME "${GLEW_LIB_NAME}" PREFIX "${DLL_PREFIX}")
 add_library (glew_s STATIC ${GLEW_DIR}/src/glew.c)
-set_target_properties (glew_s PROPERTIES COMPILE_DEFINITIONS "GLEW_STATIC" OUTPUT_NAME "${GLEW_LIB_NAME}" PREFIX lib)
+set_target_properties (glew_s PROPERTIES COMPILE_DEFINITIONS "GLEW_STATIC" OUTPUT_NAME "${GLEW_LIB_NAME}${ver}" PREFIX lib)
 target_link_libraries (glew ${GLEW_LIBRARIES})
 target_link_libraries (glew_s ${GLEW_LIBRARIES})
 
 add_library(glewmx SHARED ${GLEW_DIR}/src/glew.c )
 set_target_properties (glewmx PROPERTIES COMPILE_DEFINITIONS "GLEW_BUILD;GLEW_MX" OUTPUT_NAME "${GLEW_LIB_NAME}mx" PREFIX "${DLL_PREFIX}")
 add_library(glewmx_s STATIC ${GLEW_DIR}/src/glew.c )
-set_target_properties (glewmx_s PROPERTIES COMPILE_DEFINITIONS "GLEW_STATIC;GLEW_MX" OUTPUT_NAME "${GLEW_LIB_NAME}mx" PREFIX lib)
+set_target_properties (glewmx_s PROPERTIES COMPILE_DEFINITIONS "GLEW_STATIC;GLEW_MX" OUTPUT_NAME "${GLEW_LIB_NAME}mx${ver}" PREFIX lib)
 target_link_libraries (glewmx ${GLEW_LIBRARIES})
 target_link_libraries (glewmx_s ${GLEW_LIBRARIES})
 
@@ -110,21 +121,24 @@ set (cflags "-DGLEW_MX")
 set (libname ${GLEW_LIB_NAME}mx)
 configure_file (${GLEW_DIR}/glew.pc.in ${GLEW_DIR}/glewmx.pc @ONLY)
 
-install(FILES ${GLEW_DIR}/glew.pc ${GLEW_DIR}/glewmx.pc
-        DESTINATION lib/pkgconfig
-)
+option (INSTALL_PKGCONFIG "pkgconfig install" ON)
+if (INSTALL_PKGCONFIG)
+  install(FILES ${GLEW_DIR}/glew.pc ${GLEW_DIR}/glewmx.pc
+          DESTINATION lib/pkgconfig
+  )
+endif ()
 
 install (FILES
     ${GLEW_DIR}/include/GL/wglew.h
     ${GLEW_DIR}/include/GL/glew.h
     ${GLEW_DIR}/include/GL/glxew.h
-    DESTINATION include/GL)
+    DESTINATION include${verDir}/GL)
 
 if(MAYBE_EXPORT)
-  install(EXPORT glew-targets DESTINATION lib/cmake/glew
+  install(EXPORT glew-targets DESTINATION lib/cmake/glew${ver}
     NAMESPACE GLEW::)
   install(FILES
       ${CMAKE_CURRENT_SOURCE_DIR}/glew-config.cmake
       ${CMAKE_CURRENT_SOURCE_DIR}/CopyImportedTargetProperties.cmake
-    DESTINATION lib/cmake/glew)
+    DESTINATION lib/cmake/glew${ver})
 endif()
